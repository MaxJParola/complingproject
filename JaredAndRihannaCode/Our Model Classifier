https://www.twilio.com/blog/2017/12/sentiment-analysis-scikit-learn.html




>>> data = []
>>> data_labels = []

>>> from sklearn.feature_extraction.text import CountVectorizer
>>> with open("./pos_tweets.txt") as f:
...     for i in f: 
...         data.append(i) 
...         data_labels.append('pos')
... 
>>> with open("./neg_tweets.txt") as f:
...     for i in f: 
...         data.append(i)
...         data_labels.append('neg')

>>> vectorizer = CountVectorizer(
...     analyzer = 'word',
...     lowercase = False,
... )
>>> features = vectorizer.fit_transform(
...     data
... )
>>> features_nd = features.toarray() 

>>> from sklearn.cross_validation import train_test_split
/Users/rhiannalavalla/anaconda/lib/python3.6/site-packages/sklearn/cross_validation.py:41: DeprecationWarning: This module was deprecated in version 0.18 in favor of the model_selection module into which all the refactored classes and functions are moved. Also note that the interface of the new CV iterators are different from that of this module. This module will be removed in 0.20.
  "This module will be removed in 0.20.", DeprecationWarning)
>>> X_train, X_test, y_train, y_test  = train_test_split(
...         features_nd, 
...         data_labels,
...         train_size=0.80, 
...         random_state=1234)

>>> from sklearn.linear_model import LogisticRegression
>>> log_model = LogisticRegression()
>>> log_model = log_model.fit(X=X_train, y=y_train)
>>>     
... y_pred = log_model.predict(X_test)

>>> import random
>>> j = random.randint(0,len(X_test)-7)
>>> for i in range(j,j+7):
...     print(y_pred[0])
...     ind = features_nd.tolist().index(X_test[i].tolist())
...     print(data[ind].strip())
... 
neg
"@mydesire I saw that earlier on Darker Sights/Sounds. I subscribe to that blog in my google reader.  Yummmminesssssss."
neg
"Well, that sucked. "
neg
"i want short stack to come to england already "
neg
"@ijustine the gym is an awesome place! work it out "
neg
"@nicolerichie YES! lol...when you live in canada, anne part of your childhood. I grew up with all the books and tv series "
neg
"Awwwwwww poor Lebron can't win the division series  o well time for the lakers to beat the magic... I hope"
neg
"I want to listen to Taylor Swift's songs so that I can forget my problems.. but our computer is too slow "
>>> from sklearn.metrics import accuracy_score
>>> print(accuracy_score(y_test, y_pred))
0.800498753117207
>>> 
